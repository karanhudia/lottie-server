name: CI/CD Checks
on:
  push:
    branches:
      - main
  workflow_dispatch:
permissions:
  contents: read
  pages: write
  id-token: write
concurrency:
  group: "checks"
  cancel-in-progress: false
jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "yarn"
          cache-dependency-path: "yarn.lock"
      - uses: actions/cache@v4
        id: node-modules-cache
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/yarn.lock')}}
      - name: Install dependencies
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
  lint:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - name: Cache dependencies
        uses: actions/cache@v4
        id: cache-deps
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/yarn.lock')}}
      - name: Eslint check
        run: yarn lint

  typecheck:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - name: Cache dependencies
        uses: actions/cache@v4
        id: cache-deps
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/yarn.lock')}}
      - name: Types check
        run: yarn type-check
  test:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - name: Cache dependencies
        uses: actions/cache@v4
        id: cache-deps
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/yarn.lock')}}
      - name: Tests
        run: yarn test
